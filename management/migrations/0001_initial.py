# Generated by Django 4.0.4 on 2022-04-20 10:54

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import management.utils


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Электронная почта')),
                ('is_staff', models.BooleanField(default=False, verbose_name='Персонал')),
                ('date_joined', models.DateField(auto_now_add=True, verbose_name='Дата регистрации')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Branch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('city', models.CharField(db_index=True, max_length=50, verbose_name='Город')),
                ('name', models.CharField(db_index=True, max_length=50, verbose_name='Название филиала')),
            ],
            options={
                'verbose_name': 'Филиал',
                'verbose_name_plural': 'Филиал',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('customuser_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('photo', models.ImageField(blank=True, null=True, upload_to=management.utils.file_path, verbose_name='Фотография')),
                ('iin', models.CharField(db_index=True, max_length=12, unique=True, validators=[management.utils.iin_validator], verbose_name='ИИН')),
                ('date_of_birth', models.DateField(blank=True, verbose_name='Дата рождения')),
                ('phone_number', models.CharField(max_length=12, unique=True, validators=[django.core.validators.RegexValidator(message='Введите номер в формате +77012223344', regex='^\\+?1?\\d{9,12}$')], verbose_name='Номер телефона')),
                ('city', models.CharField(max_length=30, verbose_name='Город')),
                ('street', models.CharField(max_length=30, verbose_name='Улица')),
                ('house', models.CharField(max_length=4, validators=[django.core.validators.validate_integer], verbose_name='Номер дома')),
                ('apartment', models.CharField(blank=True, max_length=4, validators=[django.core.validators.validate_integer], verbose_name='Номер квартиры')),
                ('first_name', models.CharField(max_length=30, verbose_name='Имя')),
                ('second_name', models.CharField(blank=True, max_length=30, null=True, verbose_name='Отчество')),
                ('last_name', models.CharField(max_length=30, verbose_name='Фамилия')),
                ('status', models.CharField(choices=[('AW', 'На работе'), ('OH', 'В отпуске'), ('SL', 'На больничном'), ('OE', 'За свой счет'), ('DW', 'Уволен')], db_index=True, default='AW', max_length=2, verbose_name='Статус')),
            ],
            options={
                'verbose_name': 'Сотрудник',
                'verbose_name_plural': 'Сотрудники',
                'ordering': ['status'],
            },
            bases=('management.customuser', models.Model),
        ),
        migrations.CreateModel(
            name='Position',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=50, verbose_name='Название')),
                ('office', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='positions', to='management.branch', verbose_name='Филиал')),
            ],
            options={
                'verbose_name': 'Должность',
                'verbose_name_plural': 'Должности',
                'ordering': ['office'],
            },
        ),
        migrations.CreateModel(
            name='EmployeeDocuments',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to=management.utils.file_path, verbose_name='Файл')),
                ('uploaded', models.DateTimeField(auto_now_add=True, verbose_name='Загружено')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Изменено')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='management.employee', verbose_name='Владелец')),
            ],
            options={
                'verbose_name': 'справки/документы',
                'verbose_name_plural': '/справки/документы',
                'ordering': ['uploaded'],
            },
        ),
        migrations.AddField(
            model_name='employee',
            name='position',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='employees', to='management.position', verbose_name='Должность'),
        ),
        migrations.AddField(
            model_name='branch',
            name='supervisor',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='branch_supervisor', to='management.employee', verbose_name='Руководитель филиала'),
        ),
    ]
